name: Run tests

on:
  push:
    branches:
      - "**" # All branches, including those with /
  pull_request:
    branches: [main]

jobs:
  CheckCoverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Setup Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Install dependencies
      run: |
        poetry install --with dev
        
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
        
    - name: Start test databases
      run: |
        # Make the script executable
        chmod +x ./tests/start-test-databases.sh
        # Run the script
        ./tests/start-test-databases.sh
        
    - name: Run tests with coverage
      run: |
        poetry run pytest --cov=heritrace --cov-report=xml --cov-report=term
        echo "=== Coverage Report ==="
        poetry run coverage report
        echo "COVERAGE=$(poetry run coverage report | grep TOTAL | awk '{print $4}')" >> $GITHUB_ENV
        
    - name: Stop test databases
      if: always()
      run: |
        # Make the script executable
        chmod +x ./tests/stop-test-databases.sh
        # Run the script
        ./tests/stop-test-databases.sh
        
    - name: Generate HTML coverage report
      run: |
        poetry run coverage html -d htmlcov
        
    - name: Upload coverage report
      if: matrix.python-version == '3.10'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.ref_name }}
        path: htmlcov/
        retention-days: 14
        
    - name: Generate coverage badge
      if: matrix.python-version == '3.10'
      run: |
        # Extract coverage percentage as a number
        COVERAGE_NUM=$(echo ${{ env.COVERAGE }} | sed 's/%//')
        
        # Determine color based on coverage
        if (( $(echo "$COVERAGE_NUM >= 90" | bc -l) )); then
          COLOR="brightgreen"
        elif (( $(echo "$COVERAGE_NUM >= 80" | bc -l) )); then
          COLOR="green"
        elif (( $(echo "$COVERAGE_NUM >= 70" | bc -l) )); then
          COLOR="yellowgreen"
        elif (( $(echo "$COVERAGE_NUM >= 60" | bc -l) )); then
          COLOR="yellow"
        else
          COLOR="red"
        fi
        
        echo "BADGE_COLOR=$COLOR" >> $GITHUB_ENV
      
    - name: Create badge
      if: matrix.python-version == '3.10'
      uses: RubbaBoy/BYOB@v1.3.0
      with:
        name: opencitations-heritrace-coverage-${{ github.ref_name }}
        label: "Coverage"
        status: "${{ env.COVERAGE }}"
        color: ${{ env.BADGE_COLOR }}
        github_token: ${{ secrets.GIST_PAT }}
        repository: arcangelo7/badges
        actor: arcangelo7