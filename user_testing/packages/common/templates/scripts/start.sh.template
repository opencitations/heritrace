#!/bin/bash

# HERITRACE {{PACKAGE_TYPE_TITLE}} Testing - Startup Script
# Usage: ./start.sh

set -e

echo "üöÄ Starting HERITRACE {{PACKAGE_TYPE_TITLE}} Testing Environment"
echo "=============================================="

if ! docker info >/dev/null 2>&1; then
    echo "‚ùå Error: Docker is not running!"
    echo "   Please start Docker Desktop and try again."
    exit 1
fi

if ! docker compose version >/dev/null 2>&1; then
    echo "‚ùå Error: Docker Compose is not available!"
    echo "   Please ensure Docker Compose v2 is installed and accessible."
    exit 1
fi

echo "üîç Checking for port conflicts..."
PORT_TO_CHECK=5000

if lsof -i :$PORT_TO_CHECK >/dev/null 2>&1; then
    echo "‚ùå Error: Port $PORT_TO_CHECK is already in use."
    echo "   This port is required for the HERITRACE web interface."
    echo "   Please stop the service using this port and try again."
    exit 1
fi

echo "‚úÖ Port check passed!"

echo "üê≥ Starting Docker containers..."
echo "   This may take a few minutes on first run..."

export COMPOSE_BAKE=true
COMPOSE_CMD="docker compose"

$COMPOSE_CMD up -d --build

echo "‚è≥ Waiting for services to be ready..."
echo "   This can take 2-3 minutes for database initialization..."

wait_for_service() {
    local url=$1
    local name=$2
    local max_attempts=60
    local attempt=1
    
    echo "   Waiting for $name..."
    while [ $attempt -le $max_attempts ]; do
        if [[ "$url" == *"https"* ]]; then
            # Use -k option for HTTPS URLs to ignore certificate validation
            if curl -s -f -k "$url" >/dev/null 2>&1; then
                echo "   ‚úÖ $name is ready!"
                return 0
            fi
        else
            if curl -s -f "$url" >/dev/null 2>&1; then
                echo "   ‚úÖ $name is ready!"
                return 0
            fi
        fi
        sleep 5
        attempt=$((attempt + 1))
    done
    
    echo "   ‚ùå Timeout waiting for $name"
    return 1
}

echo "   Waiting for the application to be ready..."
wait_for_service "https://localhost:5000" "HERITRACE Application"

echo ""
echo "üéâ HERITRACE {{PACKAGE_TYPE_TITLE}} Testing is ready!"
echo "=============================================="
echo "‚úÖ All services are running"
echo ""
echo "üìñ Access Instructions:"
echo "   1. Open your web browser"
echo "   2. Go to: https://localhost:5000"
echo "   3. Accept the SSL certificate warning (it's safe for testing)"
echo "   4. You'll be automatically logged in as a demo user"
echo ""
echo "üîß Useful Commands:"
echo "   - Stop the environment: ./stop.sh"
echo ""
echo "‚ö†Ô∏è  Important: The SSL certificate is self-signed for testing."
echo "   Your browser will show a security warning - this is normal."
echo "   Click 'Advanced' and 'Proceed to localhost' to continue."
echo ""
echo "Happy testing! üß™"
