#!/bin/bash

# HERITRACE {{PACKAGE_TYPE_TITLE}} Testing - Startup Script
# Usage: ./start.sh

set -e

echo "🚀 Starting HERITRACE {{PACKAGE_TYPE_TITLE}} Testing Environment"
echo "=============================================="

if ! docker info >/dev/null 2>&1; then
    echo "❌ Error: Docker is not running!"
    echo "   Please start Docker Desktop and try again."
    exit 1
fi

# Detect the correct Docker Compose command
detect_compose_cmd() {
    if docker compose version >/dev/null 2>&1; then
        echo "docker compose"
    elif docker-compose version >/dev/null 2>&1; then
        echo "docker-compose"
    else
        echo "❌ Error: Docker Compose is not available!"
        echo "   Please ensure Docker Compose (v2) or docker-compose (v1) is installed and accessible."
        exit 1
    fi
}

COMPOSE_CMD=$(detect_compose_cmd)
echo "✅ Using Docker Compose command: $COMPOSE_CMD"

echo "🔍 Checking for port conflicts..."
PORT_TO_CHECK=5001

if lsof -i TCP:$PORT_TO_CHECK -sTCP:LISTEN >/dev/null 2>&1; then
    echo "❌ Error: Port $PORT_TO_CHECK is already in use."
    echo "   This port is required for the HERITRACE web interface."
    echo "   Please stop the service using this port and try again."
    exit 1
fi

echo "✅ Port check passed!"

echo "🐳 Starting Docker containers..."
echo "   This may take a few minutes on first run..."

export COMPOSE_BAKE=true

$COMPOSE_CMD up -d --build

echo "⏳ Waiting for services to be ready..."
echo "   This can take 2-3 minutes for database initialization..."

wait_for_service() {
    local url=$1
    local name=$2
    local max_attempts=60
    local attempt=1
    
    echo "   Waiting for $name..."
    while [ $attempt -le $max_attempts ]; do
        if [[ "$url" == *"https"* ]]; then
            # Use -k option for HTTPS URLs to ignore certificate validation
            if curl -s -f -k "$url" >/dev/null 2>&1; then
                echo "   ✅ $name is ready!"
                return 0
            fi
        else
            if curl -s -f "$url" >/dev/null 2>&1; then
                echo "   ✅ $name is ready!"
                return 0
            fi
        fi
        sleep 5
        attempt=$((attempt + 1))
    done
    
    echo "   ❌ Timeout waiting for $name"
    return 1
}

echo "   Waiting for the application to be ready..."
wait_for_service "http://localhost:5001" "HERITRACE Application"

echo ""
echo "🎉 HERITRACE {{PACKAGE_TYPE_TITLE}} Testing is ready!"
echo "=============================================="
echo "✅ All services are running"
echo ""
echo "📖 Access Instructions:"
echo "   1. Open your web browser"
echo "   2. Go to: http://localhost:5001"
echo "   3. You'll be automatically logged in as a demo user"
echo ""
echo "🔧 Useful Commands:"
echo "   - Stop the environment: ./stop.sh"
echo "{{EXPORT_COMMAND}}"

echo ""
echo "📚 Need Help?"
echo "   - Read the README.md file for testing instructions"
echo "   - Visit the official documentation: https://opencitations.github.io/heritrace/"
echo ""
echo "📝 Remember to export your results after completing the testing tasks!"
echo "Happy testing! 🧪"
