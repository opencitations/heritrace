services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - REDIS_HOST=redis
      - FLASK_ENV=development
    volumes:
      - ./heritrace:/app/heritrace
      - ./resources:/app/resources
      - ./app.py:/app/app.py
      - ./config.py:/app/config.py
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
      - ./resources/shacl.ttl:/app/resources/shacl.ttl
      - ./resources/display_rules.yaml:/app/resources/display_rules.yaml
      - ./babel:/app/babel
      - ./webpack.config.js:/app/webpack.config.js
      - docker-venv:/app/.venv
      - docker-node-modules:/app/node_modules
    depends_on:
      redis:
        condition: service_healthy
    command: npm run dev
    extra_hosts:
      - "host.docker.internal:host-gateway"
      
  redis:
    image: redis:7.4.5-alpine@sha256:0c0142c3cd69bc030ea09fecfa1c1c0c7d0e7d6081be6bb4957804f23d2cf57a
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  redis-data:
  docker-venv:
  docker-node-modules: